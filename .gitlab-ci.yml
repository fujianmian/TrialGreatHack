deploy-ecs:
  stage: deploy
  image: amazon/aws-cli:latest
  before_script:
    - apk add --no-cache jq || true
  script:
    - |
      # create a minimal task definition JSON with the new image
      cat > taskdef.json <<EOF
      {
        "family": "$TASK_FAMILY",
        "networkMode": "awsvpc",
        "executionRoleArn": "$TASK_EXECUTION_ROLE",
        "taskRoleArn": "$TASK_ROLE",
        "requiresCompatibilities": ["FARGATE"],
        "cpu": "512",
        "memory": "1024",
        "containerDefinitions": [
          {
            "name": "$APP_NAME",
            "image": "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG",
            "portMappings": [{"containerPort": 3000, "protocol": "tcp"}],
            "essential": true,
            "logConfiguration": {
              "logDriver": "awslogs",
              "options": {
                "awslogs-group": "$AWS_LOG_GROUP",
                "awslogs-region": "$AWS_REGION",
                "awslogs-stream-prefix": "$APP_NAME"
              }
            }
          }
        ]
      }
      EOF

      # register the task definition
      TASK_DEF_ARN=$(aws ecs register-task-definition \
        --cli-input-json file://taskdef.json \
        --query 'taskDefinition.taskDefinitionArn' --output text --region $AWS_REGION)
      echo "Registered task definition: $TASK_DEF_ARN"

      # update ECS service
      aws ecs update-service \
        --cluster $ECS_CLUSTER \
        --service $ECS_SERVICE \
        --task-definition $TASK_DEF_ARN \
        --force-new-deployment \
        --region $AWS_REGION
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
